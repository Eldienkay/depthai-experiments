FROM osrf/ros:noetic-desktop-full

RUN apt-get update && apt install -y \
  build-essential \
  cmake \
  git \
  python3-pip \
  python3-rosdep \
  python3-setuptools \
  python\
  libgoogle-glog-dev libgflags-dev \
  libatlas-base-dev libsuitesparse-dev libeigen3-dev

# Dependencies we use, catkin tools is very good build system
# https://github.com/ethz-asl/kalibr/wiki/installation
RUN DEBIAN_FRONTEND=noninteractive \
	apt-get install -y \
	git wget autoconf automake nano \
	python3-dev python3-pip python3-scipy python3-matplotlib \
	ipython3 python3-wxgtk4.0 python3-tk python3-igraph \
	libeigen3-dev libboost-all-dev libsuitesparse-dev \
	doxygen \
	libopencv-dev \
	libpoco-dev libtbb-dev libblas-dev liblapack-dev libv4l-dev \
	python3-catkin-tools python3-osrf-pycommon python3-testresources apt-utils python-setuptools python3-pip 
	
RUN apt-get install -y ros-${ROS_DISTRO}-depthai-ros
#  https://ceres-solver.googlesource.com/ceres-solver
RUN git clone --depth=1 https://github.com/ceres-solver/ceres-solver.git
RUN cd ceres-solver && mkdir build && cd build && cmake .. && make -j3 && make test && make install


# RUN apt install -y python-setuptools python3-pip
RUN pip3 install --user --upgrade pip setuptools

RUN apt-get install -y libdw-dev

WORKDIR /home
RUN mkdir -p dai_ws/src && cd dai_ws/src && git clone --depth=1  https://github.com/saching13/code_utils.git
RUN cd dai_ws/src && git clone --depth=1 https://github.com/saching13/imu_utils.git
RUN cd dai_ws && /bin/bash -c "source /opt/ros/${ROS_DISTRO}/setup.bash && rosdep install --from-paths src --ignore-src -r -y && catkin_make -j$(nproc)"


ENV WORKSPACE /catkin_ws
RUN mkdir -p $WORKSPACE/src && \
	cd $WORKSPACE && \
	catkin init && \
	catkin config --extend /opt/ros/noetic && \
	catkin config --merge-devel && \
	catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release

RUN cd $WORKSPACE/src && git clone --depth=1 --branch master https://github.com/ethz-asl/kalibr.git
RUN	cd $WORKSPACE && rosdep install --from-paths src --ignore-src -r -y &&\
	catkin build -DCMAKE_BUILD_TYPE=Release -j2

# RUN cd /tmp && git clone --recursive --depth=1 --branch multi_cam_support https://github.com/luxonis/depthai-core.git && \
#     cmake -Hdepthai-core -Bdepthai-core/build -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/local &&\
#     cmake --build depthai-core/build --target install


RUN echo $ROS_DISTRO
# setup entrypoint
COPY ./ros_entrypoint.sh /


ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]

# ENTRYPOINT export KALIBR_MANUAL_FOCAL_LENGTH_INIT=1 && \
# 	cd $WORKSPACE && \
# 	/bin/bash